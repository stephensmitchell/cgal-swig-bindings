# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""SWIG wrapper for the CGAL 2D Alpha Shapes package provided under the GPL-3.0+ license"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _CGAL_Alpha_shape_2
else:
    import _CGAL_Alpha_shape_2

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import CGAL.CGAL_Kernel
CGAL_VERSION_NR = _CGAL_Alpha_shape_2.CGAL_VERSION_NR
CGAL_SVN_REVISION = _CGAL_Alpha_shape_2.CGAL_SVN_REVISION
CGAL_RELEASE_DATE = _CGAL_Alpha_shape_2.CGAL_RELEASE_DATE
EXTERIOR = _CGAL_Alpha_shape_2.EXTERIOR
SINGULAR = _CGAL_Alpha_shape_2.SINGULAR
REGULAR = _CGAL_Alpha_shape_2.REGULAR
INTERIOR = _CGAL_Alpha_shape_2.INTERIOR
GENERAL = _CGAL_Alpha_shape_2.GENERAL
REGULARIZED = _CGAL_Alpha_shape_2.REGULARIZED
class Object(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Object_swiginit(self, _CGAL_Alpha_shape_2.new_Object())

    def is_Point_2(self):
        return _CGAL_Alpha_shape_2.Object_is_Point_2(self)

    def get_Point_2(self):
        return _CGAL_Alpha_shape_2.Object_get_Point_2(self)

    def is_Point_3(self):
        return _CGAL_Alpha_shape_2.Object_is_Point_3(self)

    def get_Point_3(self):
        return _CGAL_Alpha_shape_2.Object_get_Point_3(self)

    def is_Triangle_2(self):
        return _CGAL_Alpha_shape_2.Object_is_Triangle_2(self)

    def get_Triangle_2(self):
        return _CGAL_Alpha_shape_2.Object_get_Triangle_2(self)

    def is_Triangle_3(self):
        return _CGAL_Alpha_shape_2.Object_is_Triangle_3(self)

    def get_Triangle_3(self):
        return _CGAL_Alpha_shape_2.Object_get_Triangle_3(self)

    def is_Segment_3(self):
        return _CGAL_Alpha_shape_2.Object_is_Segment_3(self)

    def get_Segment_3(self):
        return _CGAL_Alpha_shape_2.Object_get_Segment_3(self)

    def is_Segment_2(self):
        return _CGAL_Alpha_shape_2.Object_is_Segment_2(self)

    def get_Segment_2(self):
        return _CGAL_Alpha_shape_2.Object_get_Segment_2(self)

    def is_Line_3(self):
        return _CGAL_Alpha_shape_2.Object_is_Line_3(self)

    def get_Line_3(self):
        return _CGAL_Alpha_shape_2.Object_get_Line_3(self)

    def is_Line_2(self):
        return _CGAL_Alpha_shape_2.Object_is_Line_2(self)

    def get_Line_2(self):
        return _CGAL_Alpha_shape_2.Object_get_Line_2(self)

    def is_Plane_3(self):
        return _CGAL_Alpha_shape_2.Object_is_Plane_3(self)

    def get_Plane_3(self):
        return _CGAL_Alpha_shape_2.Object_get_Plane_3(self)

    def is_Ray_2(self):
        return _CGAL_Alpha_shape_2.Object_is_Ray_2(self)

    def get_Ray_2(self):
        return _CGAL_Alpha_shape_2.Object_get_Ray_2(self)

    def is_Ray_3(self):
        return _CGAL_Alpha_shape_2.Object_is_Ray_3(self)

    def get_Ray_3(self):
        return _CGAL_Alpha_shape_2.Object_get_Ray_3(self)

    def is_Polygon_2(self):
        return _CGAL_Alpha_shape_2.Object_is_Polygon_2(self)

    def get_Polygon_2(self):
        return _CGAL_Alpha_shape_2.Object_get_Polygon_2(self)

    def empty(self):
        return _CGAL_Alpha_shape_2.Object_empty(self)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Object

# Register Object in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Object_swigregister(Object)

class Vertex_range(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _CGAL_Alpha_shape_2.Vertex_range_swiginit(self, _CGAL_Alpha_shape_2.new_Vertex_range(*args))
    first = property(_CGAL_Alpha_shape_2.Vertex_range_first_get, _CGAL_Alpha_shape_2.Vertex_range_first_set)
    second = property(_CGAL_Alpha_shape_2.Vertex_range_second_get, _CGAL_Alpha_shape_2.Vertex_range_second_set)
    def __len__(self):
        return 2
    def __repr__(self):
        return str((self.first, self.second))
    def __getitem__(self, index): 
        if not (index % 2):
            return self.first
        else:
            return self.second
    def __setitem__(self, index, val):
        if not (index % 2):
            self.first = val
        else:
            self.second = val
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Vertex_range

# Register Vertex_range in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Vertex_range_swigregister(Vertex_range)

class Face_Interval_3(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    first = property(_CGAL_Alpha_shape_2.Face_Interval_3_first_get, _CGAL_Alpha_shape_2.Face_Interval_3_first_set)
    second = property(_CGAL_Alpha_shape_2.Face_Interval_3_second_get, _CGAL_Alpha_shape_2.Face_Interval_3_second_set)
    third = property(_CGAL_Alpha_shape_2.Face_Interval_3_third_get, _CGAL_Alpha_shape_2.Face_Interval_3_third_set)

    def __init__(self, *args):
        _CGAL_Alpha_shape_2.Face_Interval_3_swiginit(self, _CGAL_Alpha_shape_2.new_Face_Interval_3(*args))

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Face_Interval_3_deepcopy(self, *args)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Face_Interval_3

# Register Face_Interval_3 in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Face_Interval_3_swigregister(Face_Interval_3)

class Alpha_shape_2_Face_handle(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_Face_handle())

    def dimension(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_dimension(self)

    def vertex(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_vertex(self, *args)

    def has_vertex(self, c):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_has_vertex(self, c)

    def neighbor(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_neighbor(self, *args)

    def has_neighbor(self, c):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_has_neighbor(self, c)

    def index(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_index(self, *args)

    def set_vertex(self, c1, c2):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_set_vertex(self, c1, c2)

    def set_vertices(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_set_vertices(self, *args)

    def set_neighbor(self, c1, c2):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_set_neighbor(self, c1, c2)

    def set_neighbors(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_set_neighbors(self, *args)

    def reorient(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_reorient(self)

    def ccw_permute(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_ccw_permute(self)

    def cw_permute(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_cw_permute(self)

    def is_valid(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_is_valid(self, *args)

    def __lt__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle___lt__(self, p)

    def __gt__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle___gt__(self, p)

    def __le__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle___le__(self, p)

    def __ge__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle___ge__(self, p)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle___ne__(self, p)

    def __hash__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle___hash__(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_deepcopy(self, *args)

    def get_alpha(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_get_alpha(self)

    def get_ranges(self, i):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_get_ranges(self, i)

    def set_ranges(self, i, r):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_set_ranges(self, i, r)

    def set_alpha(self, d):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_set_alpha(self, d)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_Face_handle

# Register Alpha_shape_2_Face_handle in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_Face_handle_swigregister(Alpha_shape_2_Face_handle)

class Alpha_shape_2_Vertex_handle(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_handle_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_Vertex_handle())

    def point(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_handle_point(self, *args)

    def set_point(self, c):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_handle_set_point(self, c)

    def __lt__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_handle___lt__(self, p)

    def __gt__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_handle___gt__(self, p)

    def __le__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_handle___le__(self, p)

    def __ge__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_handle___ge__(self, p)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_handle___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_handle___ne__(self, p)

    def __hash__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_handle___hash__(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_handle_deepcopy(self, *args)

    def get_range(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_handle_get_range(self)

    def set_range(self, range):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_handle_set_range(self, range)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_Vertex_handle

# Register Alpha_shape_2_Vertex_handle in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_handle_swigregister(Alpha_shape_2_Vertex_handle)

class Alpha_shape_2_Edge(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _CGAL_Alpha_shape_2.Alpha_shape_2_Edge_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_Edge(*args))
    first = property(_CGAL_Alpha_shape_2.Alpha_shape_2_Edge_first_get, _CGAL_Alpha_shape_2.Alpha_shape_2_Edge_first_set)
    second = property(_CGAL_Alpha_shape_2.Alpha_shape_2_Edge_second_get, _CGAL_Alpha_shape_2.Alpha_shape_2_Edge_second_set)
    def __len__(self):
        return 2
    def __repr__(self):
        return str((self.first, self.second))
    def __getitem__(self, index): 
        if not (index % 2):
            return self.first
        else:
            return self.second
    def __setitem__(self, index, val):
        if not (index % 2):
            self.first = val
        else:
            self.second = val
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_Edge

# Register Alpha_shape_2_Edge in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_Edge_swigregister(Alpha_shape_2_Edge)

class Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_swiginit(self, _CGAL_Alpha_shape_2.new_Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2())

    def clear(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_clear(self)

    def dimension(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_dimension(self)

    def number_of_vertices(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_number_of_vertices(self)

    def number_of_faces(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_number_of_faces(self)

    def infinite_face(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_infinite_face(self, *args)

    def infinite_vertex(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_infinite_vertex(self, *args)

    def finite_vertex(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_finite_vertex(self, *args)

    def is_infinite(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_is_infinite(self, *args)

    def is_edge(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_is_edge(self, *args)

    def includes_edge(self, va, vb, vbr, fr, i):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_includes_edge(self, va, vb, vbr, fr, i)

    def is_face(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_is_face(self, *args)

    def oriented_side(self, c1, c2):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_oriented_side(self, c1, c2)

    def side_of_oriented_circle(self, c1, c2):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_side_of_oriented_circle(self, c1, c2)

    def locate(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_locate(self, *args)

    def finite_vertices(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_finite_vertices(self)

    def finite_edges(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_finite_edges(self)

    def finite_faces(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_finite_faces(self)

    def all_vertices(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_all_vertices(self)

    def all_edges(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_all_edges(self)

    def all_faces(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_all_faces(self)

    def points(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_points(self)

    def line_walk(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_line_walk(self, *args)

    def incident_faces(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_incident_faces(self, *args)

    def incident_edges(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_incident_edges(self, *args)

    def incident_vertices(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_incident_vertices(self, *args)

    def mirror_vertex(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_mirror_vertex(self, *args)

    def mirror_index(self, c1, c2):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_mirror_index(self, c1, c2)

    def ccw(self, c):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_ccw(self, c)

    def cw(self, c):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_cw(self, c)

    def circumcenter(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_circumcenter(self, *args)

    def set_infinite_vertex(self, c):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_set_infinite_vertex(self, c)

    def is_valid(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_is_valid(self, *args)

    def triangle(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_triangle(self, *args)

    def segment(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_segment(self, *args)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2

# Register Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2 in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2_swigregister(Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2)

class Alpha_shape_2_All_vertices_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_All_vertices_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_All_vertices_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_vertices_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_vertices_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_vertices_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_vertices_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_vertices_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_vertices_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_vertices_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_All_vertices_iterator

# Register Alpha_shape_2_All_vertices_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_All_vertices_iterator_swigregister(Alpha_shape_2_All_vertices_iterator)

class Alpha_shape_2_Finite_vertices_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_vertices_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_Finite_vertices_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_vertices_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_vertices_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_vertices_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_vertices_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_vertices_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_vertices_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_vertices_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_Finite_vertices_iterator

# Register Alpha_shape_2_Finite_vertices_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_Finite_vertices_iterator_swigregister(Alpha_shape_2_Finite_vertices_iterator)

class Alpha_shape_2_All_faces_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_All_faces_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_All_faces_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_faces_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_faces_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_faces_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_faces_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_faces_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_faces_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_faces_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_All_faces_iterator

# Register Alpha_shape_2_All_faces_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_All_faces_iterator_swigregister(Alpha_shape_2_All_faces_iterator)

class Alpha_shape_2_Finite_faces_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_faces_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_Finite_faces_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_faces_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_faces_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_faces_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_faces_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_faces_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_faces_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_faces_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_Finite_faces_iterator

# Register Alpha_shape_2_Finite_faces_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_Finite_faces_iterator_swigregister(Alpha_shape_2_Finite_faces_iterator)

class Alpha_shape_2_All_edges_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_All_edges_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_All_edges_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_edges_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_edges_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_edges_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_edges_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_edges_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_edges_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_All_edges_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_All_edges_iterator

# Register Alpha_shape_2_All_edges_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_All_edges_iterator_swigregister(Alpha_shape_2_All_edges_iterator)

class Alpha_shape_2_Finite_edges_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_edges_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_Finite_edges_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_edges_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_edges_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_edges_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_edges_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_edges_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_edges_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Finite_edges_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_Finite_edges_iterator

# Register Alpha_shape_2_Finite_edges_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_Finite_edges_iterator_swigregister(Alpha_shape_2_Finite_edges_iterator)

class Alpha_shape_2_Point_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_Point_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_Point_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Point_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Point_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Point_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Point_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Point_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Point_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Point_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_Point_iterator

# Register Alpha_shape_2_Point_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_Point_iterator_swigregister(Alpha_shape_2_Point_iterator)

class Alpha_shape_2_Line_face_circulator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_Line_face_circulator_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_Line_face_circulator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Line_face_circulator___iter__(self)

    def next(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Line_face_circulator_next(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Line_face_circulator_deepcopy(self, *args)

    def prev(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Line_face_circulator_prev(self)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Line_face_circulator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Line_face_circulator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Line_face_circulator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_Line_face_circulator

# Register Alpha_shape_2_Line_face_circulator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_Line_face_circulator_swigregister(Alpha_shape_2_Line_face_circulator)

class Alpha_shape_2_Face_circulator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_Face_circulator_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_Face_circulator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_circulator___iter__(self)

    def next(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_circulator_next(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_circulator_deepcopy(self, *args)

    def prev(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_circulator_prev(self)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_circulator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_circulator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Face_circulator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_Face_circulator

# Register Alpha_shape_2_Face_circulator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_Face_circulator_swigregister(Alpha_shape_2_Face_circulator)

class Alpha_shape_2_Edge_circulator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_Edge_circulator_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_Edge_circulator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Edge_circulator___iter__(self)

    def next(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Edge_circulator_next(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Edge_circulator_deepcopy(self, *args)

    def prev(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Edge_circulator_prev(self)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Edge_circulator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Edge_circulator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Edge_circulator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_Edge_circulator

# Register Alpha_shape_2_Edge_circulator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_Edge_circulator_swigregister(Alpha_shape_2_Edge_circulator)

class Alpha_shape_2_Vertex_circulator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_circulator_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_Vertex_circulator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_circulator___iter__(self)

    def next(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_circulator_next(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_circulator_deepcopy(self, *args)

    def prev(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_circulator_prev(self)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_circulator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_circulator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_circulator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_Vertex_circulator

# Register Alpha_shape_2_Vertex_circulator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_Vertex_circulator_swigregister(Alpha_shape_2_Vertex_circulator)

class Ref_Alpha_shape_2_Face_handle(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _CGAL_Alpha_shape_2.Ref_Alpha_shape_2_Face_handle_swiginit(self, _CGAL_Alpha_shape_2.new_Ref_Alpha_shape_2_Face_handle(*args))

    def set(self, t):
        return _CGAL_Alpha_shape_2.Ref_Alpha_shape_2_Face_handle_set(self, t)

    def object(self):
        return _CGAL_Alpha_shape_2.Ref_Alpha_shape_2_Face_handle_object(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Ref_Alpha_shape_2_Face_handle_deepcopy(self, *args)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Ref_Alpha_shape_2_Face_handle

# Register Ref_Alpha_shape_2_Face_handle in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Ref_Alpha_shape_2_Face_handle_swigregister(Ref_Alpha_shape_2_Face_handle)

class Ref_Alpha_shape_2_Vertex_handle(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _CGAL_Alpha_shape_2.Ref_Alpha_shape_2_Vertex_handle_swiginit(self, _CGAL_Alpha_shape_2.new_Ref_Alpha_shape_2_Vertex_handle(*args))

    def set(self, t):
        return _CGAL_Alpha_shape_2.Ref_Alpha_shape_2_Vertex_handle_set(self, t)

    def object(self):
        return _CGAL_Alpha_shape_2.Ref_Alpha_shape_2_Vertex_handle_object(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Ref_Alpha_shape_2_Vertex_handle_deepcopy(self, *args)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Ref_Alpha_shape_2_Vertex_handle

# Register Ref_Alpha_shape_2_Vertex_handle in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Ref_Alpha_shape_2_Vertex_handle_swigregister(Ref_Alpha_shape_2_Vertex_handle)

class Internal_Delaunay_Alpha_shape_2(Internal_Triangulation_2_Internal_Delaunay_Alpha_shape_2):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Internal_Delaunay_Alpha_shape_2_swiginit(self, _CGAL_Alpha_shape_2.new_Internal_Delaunay_Alpha_shape_2())

    def nearest_vertex(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Delaunay_Alpha_shape_2_nearest_vertex(self, *args)

    def get_conflicts_and_boundary(self, p, fout, eout, start):
        return _CGAL_Alpha_shape_2.Internal_Delaunay_Alpha_shape_2_get_conflicts_and_boundary(self, p, fout, eout, start)

    def get_conflicts(self, p, fout, start):
        return _CGAL_Alpha_shape_2.Internal_Delaunay_Alpha_shape_2_get_conflicts(self, p, fout, start)

    def get_boundary_of_conflicts(self, p, out, start):
        return _CGAL_Alpha_shape_2.Internal_Delaunay_Alpha_shape_2_get_boundary_of_conflicts(self, p, out, start)

    def dual(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Delaunay_Alpha_shape_2_dual(self, *args)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Internal_Delaunay_Alpha_shape_2

# Register Internal_Delaunay_Alpha_shape_2 in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Internal_Delaunay_Alpha_shape_2_swigregister(Internal_Delaunay_Alpha_shape_2)

class Alpha_shape_2(Internal_Delaunay_Alpha_shape_2):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _CGAL_Alpha_shape_2.Alpha_shape_2_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2(*args))

    def set_mode(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_set_mode(self, *args)

    def get_mode(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_get_mode(self)

    def clear(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_clear(self)

    def set_alpha(self, c):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_set_alpha(self, c)

    def get_alpha(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_get_alpha(self)

    def get_nth_alpha(self, c):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_get_nth_alpha(self, c)

    def number_of_alphas(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_number_of_alphas(self)

    def make_alpha_shape(self, range):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_make_alpha_shape(self, range)

    def alpha(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_alpha(self)

    def alpha_find(self, a):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_alpha_find(self, a)

    def alpha_lower_bound(self, a):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_alpha_lower_bound(self, a)

    def alpha_upper_bound(self, a):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_alpha_upper_bound(self, a)

    def number_of_solid_components(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_number_of_solid_components(self, *args)

    def find_optimal_alpha(self, i):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_find_optimal_alpha(self, i)

    def alpha_shape_vertices(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_alpha_shape_vertices(self)

    def alpha_shape_edges(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_alpha_shape_edges(self)

    def classify(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_classify(self, *args)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2

# Register Alpha_shape_2 in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_swigregister(Alpha_shape_2)

class Alpha_shape_2_Alpha_shape_vertices_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_vertices_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_Alpha_shape_vertices_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_vertices_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_vertices_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_vertices_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_vertices_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_vertices_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_vertices_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_vertices_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_Alpha_shape_vertices_iterator

# Register Alpha_shape_2_Alpha_shape_vertices_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_vertices_iterator_swigregister(Alpha_shape_2_Alpha_shape_vertices_iterator)

class Alpha_shape_2_Alpha_shape_edges_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_edges_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_Alpha_shape_edges_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_edges_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_edges_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_edges_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_edges_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_edges_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_edges_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_edges_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_Alpha_shape_edges_iterator

# Register Alpha_shape_2_Alpha_shape_edges_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_shape_edges_iterator_swigregister(Alpha_shape_2_Alpha_shape_edges_iterator)

class Alpha_shape_2_Alpha_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Alpha_shape_2_Alpha_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_iterator___iter__(self)

    def next(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_iterator_next(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_iterator___next__(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Alpha_shape_2_Alpha_iterator

# Register Alpha_shape_2_Alpha_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Alpha_shape_2_Alpha_iterator_swigregister(Alpha_shape_2_Alpha_iterator)

class Weighted_alpha_shape_2_Face_handle(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_Face_handle())

    def dimension(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_dimension(self)

    def vertex(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_vertex(self, *args)

    def has_vertex(self, c):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_has_vertex(self, c)

    def neighbor(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_neighbor(self, *args)

    def has_neighbor(self, c):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_has_neighbor(self, c)

    def index(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_index(self, *args)

    def set_vertex(self, c1, c2):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_set_vertex(self, c1, c2)

    def set_vertices(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_set_vertices(self, *args)

    def set_neighbor(self, c1, c2):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_set_neighbor(self, c1, c2)

    def set_neighbors(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_set_neighbors(self, *args)

    def reorient(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_reorient(self)

    def ccw_permute(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_ccw_permute(self)

    def cw_permute(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_cw_permute(self)

    def is_valid(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_is_valid(self, *args)

    def __lt__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle___lt__(self, p)

    def __gt__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle___gt__(self, p)

    def __le__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle___le__(self, p)

    def __ge__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle___ge__(self, p)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle___ne__(self, p)

    def __hash__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle___hash__(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_deepcopy(self, *args)

    def get_alpha(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_get_alpha(self)

    def get_ranges(self, i):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_get_ranges(self, i)

    def set_ranges(self, i, r):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_set_ranges(self, i, r)

    def set_alpha(self, d):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_set_alpha(self, d)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_Face_handle

# Register Weighted_alpha_shape_2_Face_handle in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_handle_swigregister(Weighted_alpha_shape_2_Face_handle)

class Weighted_alpha_shape_2_Vertex_handle(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_handle_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_Vertex_handle())

    def point(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_handle_point(self, *args)

    def set_point(self, c):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_handle_set_point(self, c)

    def __lt__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_handle___lt__(self, p)

    def __gt__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_handle___gt__(self, p)

    def __le__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_handle___le__(self, p)

    def __ge__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_handle___ge__(self, p)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_handle___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_handle___ne__(self, p)

    def __hash__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_handle___hash__(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_handle_deepcopy(self, *args)

    def get_range(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_handle_get_range(self)

    def set_range(self, range):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_handle_set_range(self, range)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_Vertex_handle

# Register Weighted_alpha_shape_2_Vertex_handle in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_handle_swigregister(Weighted_alpha_shape_2_Vertex_handle)

class Weighted_alpha_shape_2_Edge(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Edge_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_Edge(*args))
    first = property(_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Edge_first_get, _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Edge_first_set)
    second = property(_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Edge_second_get, _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Edge_second_set)
    def __len__(self):
        return 2
    def __repr__(self):
        return str((self.first, self.second))
    def __getitem__(self, index): 
        if not (index % 2):
            return self.first
        else:
            return self.second
    def __setitem__(self, index, val):
        if not (index % 2):
            self.first = val
        else:
            self.second = val
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_Edge

# Register Weighted_alpha_shape_2_Edge in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Edge_swigregister(Weighted_alpha_shape_2_Edge)

class Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_swiginit(self, _CGAL_Alpha_shape_2.new_Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2())

    def clear(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_clear(self)

    def dimension(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_dimension(self)

    def number_of_vertices(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_number_of_vertices(self)

    def number_of_faces(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_number_of_faces(self)

    def infinite_face(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_infinite_face(self, *args)

    def infinite_vertex(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_infinite_vertex(self, *args)

    def finite_vertex(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_finite_vertex(self, *args)

    def is_infinite(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_is_infinite(self, *args)

    def is_edge(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_is_edge(self, *args)

    def includes_edge(self, va, vb, vbr, fr, i):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_includes_edge(self, va, vb, vbr, fr, i)

    def is_face(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_is_face(self, *args)

    def oriented_side(self, c1, c2):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_oriented_side(self, c1, c2)

    def side_of_oriented_circle(self, c1, c2):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_side_of_oriented_circle(self, c1, c2)

    def locate(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_locate(self, *args)

    def finite_vertices(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_finite_vertices(self)

    def finite_edges(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_finite_edges(self)

    def finite_faces(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_finite_faces(self)

    def all_vertices(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_all_vertices(self)

    def all_edges(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_all_edges(self)

    def all_faces(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_all_faces(self)

    def points(self):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_points(self)

    def line_walk(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_line_walk(self, *args)

    def incident_faces(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_incident_faces(self, *args)

    def incident_edges(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_incident_edges(self, *args)

    def incident_vertices(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_incident_vertices(self, *args)

    def mirror_vertex(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_mirror_vertex(self, *args)

    def mirror_index(self, c1, c2):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_mirror_index(self, c1, c2)

    def ccw(self, c):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_ccw(self, c)

    def cw(self, c):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_cw(self, c)

    def circumcenter(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_circumcenter(self, *args)

    def set_infinite_vertex(self, c):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_set_infinite_vertex(self, c)

    def is_valid(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_is_valid(self, *args)

    def triangle(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_triangle(self, *args)

    def segment(self, *args):
        return _CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_segment(self, *args)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2

# Register Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2 in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2_swigregister(Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2)

class Weighted_alpha_shape_2_All_vertices_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_vertices_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_All_vertices_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_vertices_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_vertices_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_vertices_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_vertices_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_vertices_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_vertices_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_vertices_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_All_vertices_iterator

# Register Weighted_alpha_shape_2_All_vertices_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_vertices_iterator_swigregister(Weighted_alpha_shape_2_All_vertices_iterator)

class Weighted_alpha_shape_2_Finite_vertices_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_vertices_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_Finite_vertices_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_vertices_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_vertices_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_vertices_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_vertices_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_vertices_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_vertices_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_vertices_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_Finite_vertices_iterator

# Register Weighted_alpha_shape_2_Finite_vertices_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_vertices_iterator_swigregister(Weighted_alpha_shape_2_Finite_vertices_iterator)

class Weighted_alpha_shape_2_All_faces_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_faces_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_All_faces_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_faces_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_faces_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_faces_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_faces_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_faces_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_faces_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_faces_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_All_faces_iterator

# Register Weighted_alpha_shape_2_All_faces_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_faces_iterator_swigregister(Weighted_alpha_shape_2_All_faces_iterator)

class Weighted_alpha_shape_2_Finite_faces_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_faces_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_Finite_faces_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_faces_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_faces_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_faces_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_faces_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_faces_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_faces_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_faces_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_Finite_faces_iterator

# Register Weighted_alpha_shape_2_Finite_faces_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_faces_iterator_swigregister(Weighted_alpha_shape_2_Finite_faces_iterator)

class Weighted_alpha_shape_2_All_edges_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_edges_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_All_edges_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_edges_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_edges_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_edges_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_edges_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_edges_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_edges_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_edges_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_All_edges_iterator

# Register Weighted_alpha_shape_2_All_edges_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_All_edges_iterator_swigregister(Weighted_alpha_shape_2_All_edges_iterator)

class Weighted_alpha_shape_2_Finite_edges_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_edges_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_Finite_edges_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_edges_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_edges_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_edges_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_edges_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_edges_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_edges_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_edges_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_Finite_edges_iterator

# Register Weighted_alpha_shape_2_Finite_edges_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Finite_edges_iterator_swigregister(Weighted_alpha_shape_2_Finite_edges_iterator)

class Weighted_alpha_shape_2_Point_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Point_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_Point_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Point_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Point_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Point_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Point_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Point_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Point_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Point_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_Point_iterator

# Register Weighted_alpha_shape_2_Point_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Point_iterator_swigregister(Weighted_alpha_shape_2_Point_iterator)

class Weighted_alpha_shape_2_Line_face_circulator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Line_face_circulator_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_Line_face_circulator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Line_face_circulator___iter__(self)

    def next(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Line_face_circulator_next(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Line_face_circulator_deepcopy(self, *args)

    def prev(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Line_face_circulator_prev(self)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Line_face_circulator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Line_face_circulator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Line_face_circulator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_Line_face_circulator

# Register Weighted_alpha_shape_2_Line_face_circulator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Line_face_circulator_swigregister(Weighted_alpha_shape_2_Line_face_circulator)

class Weighted_alpha_shape_2_Face_circulator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_circulator_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_Face_circulator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_circulator___iter__(self)

    def next(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_circulator_next(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_circulator_deepcopy(self, *args)

    def prev(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_circulator_prev(self)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_circulator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_circulator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_circulator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_Face_circulator

# Register Weighted_alpha_shape_2_Face_circulator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Face_circulator_swigregister(Weighted_alpha_shape_2_Face_circulator)

class Weighted_alpha_shape_2_Edge_circulator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Edge_circulator_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_Edge_circulator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Edge_circulator___iter__(self)

    def next(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Edge_circulator_next(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Edge_circulator_deepcopy(self, *args)

    def prev(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Edge_circulator_prev(self)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Edge_circulator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Edge_circulator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Edge_circulator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_Edge_circulator

# Register Weighted_alpha_shape_2_Edge_circulator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Edge_circulator_swigregister(Weighted_alpha_shape_2_Edge_circulator)

class Weighted_alpha_shape_2_Vertex_circulator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_circulator_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_Vertex_circulator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_circulator___iter__(self)

    def next(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_circulator_next(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_circulator_deepcopy(self, *args)

    def prev(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_circulator_prev(self)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_circulator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_circulator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_circulator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_Vertex_circulator

# Register Weighted_alpha_shape_2_Vertex_circulator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Vertex_circulator_swigregister(Weighted_alpha_shape_2_Vertex_circulator)

class Ref_Weighted_alpha_shape_2_Face_handle(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _CGAL_Alpha_shape_2.Ref_Weighted_alpha_shape_2_Face_handle_swiginit(self, _CGAL_Alpha_shape_2.new_Ref_Weighted_alpha_shape_2_Face_handle(*args))

    def set(self, t):
        return _CGAL_Alpha_shape_2.Ref_Weighted_alpha_shape_2_Face_handle_set(self, t)

    def object(self):
        return _CGAL_Alpha_shape_2.Ref_Weighted_alpha_shape_2_Face_handle_object(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Ref_Weighted_alpha_shape_2_Face_handle_deepcopy(self, *args)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Ref_Weighted_alpha_shape_2_Face_handle

# Register Ref_Weighted_alpha_shape_2_Face_handle in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Ref_Weighted_alpha_shape_2_Face_handle_swigregister(Ref_Weighted_alpha_shape_2_Face_handle)

class Ref_Weighted_alpha_shape_2_Vertex_handle(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _CGAL_Alpha_shape_2.Ref_Weighted_alpha_shape_2_Vertex_handle_swiginit(self, _CGAL_Alpha_shape_2.new_Ref_Weighted_alpha_shape_2_Vertex_handle(*args))

    def set(self, t):
        return _CGAL_Alpha_shape_2.Ref_Weighted_alpha_shape_2_Vertex_handle_set(self, t)

    def object(self):
        return _CGAL_Alpha_shape_2.Ref_Weighted_alpha_shape_2_Vertex_handle_object(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Ref_Weighted_alpha_shape_2_Vertex_handle_deepcopy(self, *args)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Ref_Weighted_alpha_shape_2_Vertex_handle

# Register Ref_Weighted_alpha_shape_2_Vertex_handle in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Ref_Weighted_alpha_shape_2_Vertex_handle_swigregister(Ref_Weighted_alpha_shape_2_Vertex_handle)

class Weighted_alpha_shape_2_Hidden_vertices_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Hidden_vertices_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_Hidden_vertices_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Hidden_vertices_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Hidden_vertices_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Hidden_vertices_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Hidden_vertices_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Hidden_vertices_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Hidden_vertices_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Hidden_vertices_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_Hidden_vertices_iterator

# Register Weighted_alpha_shape_2_Hidden_vertices_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Hidden_vertices_iterator_swigregister(Weighted_alpha_shape_2_Hidden_vertices_iterator)

class Internal_regular_Weighted_alpha_shape_2(Internal_Triangulation_2_Internal_regular_Weighted_alpha_shape_2):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Internal_regular_Weighted_alpha_shape_2_swiginit(self, _CGAL_Alpha_shape_2.new_Internal_regular_Weighted_alpha_shape_2())

    def number_of_hidden_vertices(self):
        return _CGAL_Alpha_shape_2.Internal_regular_Weighted_alpha_shape_2_number_of_hidden_vertices(self)

    def hidden_vertices(self):
        return _CGAL_Alpha_shape_2.Internal_regular_Weighted_alpha_shape_2_hidden_vertices(self)

    def weighted_circumcenter(self, *args):
        return _CGAL_Alpha_shape_2.Internal_regular_Weighted_alpha_shape_2_weighted_circumcenter(self, *args)

    def dual(self, *args):
        return _CGAL_Alpha_shape_2.Internal_regular_Weighted_alpha_shape_2_dual(self, *args)

    def power_test(self, c1, c2):
        return _CGAL_Alpha_shape_2.Internal_regular_Weighted_alpha_shape_2_power_test(self, c1, c2)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Internal_regular_Weighted_alpha_shape_2

# Register Internal_regular_Weighted_alpha_shape_2 in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Internal_regular_Weighted_alpha_shape_2_swigregister(Internal_regular_Weighted_alpha_shape_2)

class Weighted_alpha_shape_2(Internal_regular_Weighted_alpha_shape_2):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2(*args))

    def set_mode(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_set_mode(self, *args)

    def get_mode(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_get_mode(self)

    def clear(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_clear(self)

    def set_alpha(self, c):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_set_alpha(self, c)

    def get_alpha(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_get_alpha(self)

    def get_nth_alpha(self, c):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_get_nth_alpha(self, c)

    def number_of_alphas(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_number_of_alphas(self)

    def make_alpha_shape(self, range):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_make_alpha_shape(self, range)

    def alpha(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_alpha(self)

    def alpha_find(self, a):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_alpha_find(self, a)

    def alpha_lower_bound(self, a):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_alpha_lower_bound(self, a)

    def alpha_upper_bound(self, a):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_alpha_upper_bound(self, a)

    def number_of_solid_components(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_number_of_solid_components(self, *args)

    def find_optimal_alpha(self, i):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_find_optimal_alpha(self, i)

    def alpha_shape_vertices(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_alpha_shape_vertices(self)

    def alpha_shape_edges(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_alpha_shape_edges(self)

    def classify(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_classify(self, *args)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2

# Register Weighted_alpha_shape_2 in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_swigregister(Weighted_alpha_shape_2)

class Weighted_alpha_shape_2_Alpha_shape_vertices_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_vertices_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_Alpha_shape_vertices_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_vertices_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_vertices_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_vertices_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_vertices_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_vertices_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_vertices_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_vertices_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_Alpha_shape_vertices_iterator

# Register Weighted_alpha_shape_2_Alpha_shape_vertices_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_vertices_iterator_swigregister(Weighted_alpha_shape_2_Alpha_shape_vertices_iterator)

class Weighted_alpha_shape_2_Alpha_shape_edges_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_edges_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_Alpha_shape_edges_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_edges_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_edges_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_edges_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_edges_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_edges_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_edges_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_edges_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_Alpha_shape_edges_iterator

# Register Weighted_alpha_shape_2_Alpha_shape_edges_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_shape_edges_iterator_swigregister(Weighted_alpha_shape_2_Alpha_shape_edges_iterator)

class Weighted_alpha_shape_2_Alpha_iterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_iterator_swiginit(self, _CGAL_Alpha_shape_2.new_Weighted_alpha_shape_2_Alpha_iterator())

    def __iter__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_iterator___iter__(self)

    def next(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_iterator_next(self)

    def __next__(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_iterator___next__(self)

    def deepcopy(self, *args):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Alpha_shape_2.delete_Weighted_alpha_shape_2_Alpha_iterator

# Register Weighted_alpha_shape_2_Alpha_iterator in _CGAL_Alpha_shape_2:
_CGAL_Alpha_shape_2.Weighted_alpha_shape_2_Alpha_iterator_swigregister(Weighted_alpha_shape_2_Alpha_iterator)



